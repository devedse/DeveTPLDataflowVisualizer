name: GitHubActionsBuilds

on: push

jobs:
  generate_version_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ github.ref == 'refs/heads/master' && steps.buildnumber.outputs.build_number || 1 }}
    steps:
    - name: Generate build number
      if: github.ref == 'refs/heads/master'
      id: buildnumber
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.github_token}}

  build_docker:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/master'
      uses: docker/login-action@v2
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveTPLDataflowVisualizer.ConsoleApp/Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm64,linux/amd64 -t devedse/devetpldataflowvisualizerconsoleapp:${{needs.generate_version_number.outputs.build_number}} -t devedse/devetpldataflowvisualizerconsoleapp:latest ${{ github.ref == 'refs/heads/master' && '--push' || '' }} .

  intellicode:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # We need to fetch the entire Git history in order to verify the authenticity.
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Build with dotnet
      run: dotnet build DeveTPLDataflowVisualizer.sln -c Release /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}} # Project needs to build before training a model.
    - name: Train Intellicode Model
      uses: microsoft/vs-intellicode@v1

  build_linux:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Install dependencies
      run: dotnet restore DeveTPLDataflowVisualizer.sln
    - name: Build
      run: dotnet build DeveTPLDataflowVisualizer.sln -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: Test
      run: dotnet test DeveTPLDataflowVisualizer.sln --no-restore --verbosity normal
  
  build_windows_consoleapp:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Publish Untrimmed
      run: dotnet publish DeveTPLDataflowVisualizer.ConsoleApp/DeveTPLDataflowVisualizer.ConsoleApp.csproj -c Release -r win-x64 -o DeveTPLDataflowVisualizer.ConsoleApp/bin/Release/net7.0/win-x64/publishuntrimmed/ /p:PublishSingleFile=true /p:SelfContained=true /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: Publish Trimmed
      run: dotnet publish DeveTPLDataflowVisualizer.ConsoleApp/DeveTPLDataflowVisualizer.ConsoleApp.csproj -c Release -r win-x64 -o DeveTPLDataflowVisualizer.ConsoleApp/bin/Release/net7.0/win-x64/publishtrimmed/ /p:PublishSingleFile=true /p:SelfContained=true /p:PublishTrimmed=true /p:TrimMode=full /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: Publish Trimmed AOT
      run: dotnet publish DeveTPLDataflowVisualizer.ConsoleApp/DeveTPLDataflowVisualizer.ConsoleApp.csproj -c Release -r win-x64 -o DeveTPLDataflowVisualizer.ConsoleApp/bin/Release/net7.0/win-x64/publishtrimmedaot/ /p:PublishTrimmed=true /p:TrimMode=full /p:PublishAot=true /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: Copy output
      shell: bash
      run: |
        mkdir BuildOutputConsole
        mv ./DeveTPLDataflowVisualizer.ConsoleApp/bin/Release/net7.0/win-x64/publishuntrimmed/DeveTPLDataflowVisualizer.ConsoleApp.exe ./BuildOutputConsole/DeveTPLDataflowVisualizer.ConsoleApp.Untrimmed.exe
        mv ./DeveTPLDataflowVisualizer.ConsoleApp/bin/Release/net7.0/win-x64/publishtrimmed/DeveTPLDataflowVisualizer.ConsoleApp.exe ./BuildOutputConsole/DeveTPLDataflowVisualizer.ConsoleApp.Trimmed.exe
        mv ./DeveTPLDataflowVisualizer.ConsoleApp/bin/Release/net7.0/win-x64/publishtrimmedaot/DeveTPLDataflowVisualizer.ConsoleApp.exe ./BuildOutputConsole/DeveTPLDataflowVisualizer.ConsoleApp.TrimmedAot.exe
    - uses: actions/upload-artifact@v3
      with:
        name: DeveTPLDataflowVisualizer.ConsoleApp
        path: BuildOutputConsole/*.exe

  build_windows:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '19' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - name: Install tools
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-reportgenerator-globaltool
    - name: Install dependencies
      run: dotnet restore DeveTPLDataflowVisualizer.sln
    - name: SonarQube begin
      if: github.actor != 'dependabot[bot]'
      run: dotnet-sonarscanner begin /k:"DeveTPLDataflowVisualizer" /o:"devedse-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=${{secrets.SONARQUBETOKEN}} /d:sonar.cs.opencover.reportsPaths=".\DeveTPLDataflowVisualizer.Tests\TestResults\Coverage\coverage.opencover.xml" /d:sonar.coverage.exclusions="DeveTPLDataflowVisualizer.ConsoleApp/**/*.cs,DeveTPLDataflowVisualizer.Tests/**/*.cs"
    - name: Build
      run: dotnet build DeveTPLDataflowVisualizer.sln -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: Test
      run: dotnet test DeveTPLDataflowVisualizer.sln --verbosity normal --no-build -c Release --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover
    - name: SonarQube end
      if: github.actor != 'dependabot[bot]'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: dotnet-sonarscanner end /d:sonar.login=${{secrets.SONARQUBETOKEN}}
    - name: Pack
      run: dotnet pack DeveTPLDataflowVisualizer\DeveTPLDataflowVisualizer.csproj --verbosity normal --no-build -c Release /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: Run CodeCov
      uses: codecov/codecov-action@v3
      with:
        directory: ./DeveTPLDataflowVisualizer.Tests/TestResults
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

    - name: Run GoPackage.ps1 script
      run: .\Scripts\GoPackage.ps1
      shell: pwsh


    - uses: actions/upload-artifact@v3
      with:
        name: DeveTPLDataflowVisualizer7z
        path: ./Scripts/Output/DeveTPLDataflowVisualizer.7z
    - uses: actions/upload-artifact@v3
      with:
        name: DeveTPLDataflowVisualizerZip
        path: ./Scripts/Output/DeveTPLDataflowVisualizer.zip
    - uses: actions/upload-artifact@v3
      with:
        name: DeveTPLDataflowVisualizerNuGet
        path: |
          ./DeveTPLDataflowVisualizer/bin/Release/*.nupkg
          ./DeveTPLDataflowVisualizer/bin/Release/*.snupkg

  release_github:
    needs: [
      generate_version_number,
      intellicode,
      build_windows_consoleapp,
      build_windows,
      build_linux,
      build_docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts/

    - name: Display structure of downloaded files
      run: |
        cd ./artifacts/
        ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        release_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        body: |
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        files: |
          ./artifacts/DeveTPLDataflowVisualizer7z/DeveTPLDataflowVisualizer.7z
          ./artifacts/DeveTPLDataflowVisualizerZip/DeveTPLDataflowVisualizer.zip
          ./artifacts/DeveTPLDataflowVisualizerNuGet/*.nupkg
          ./artifacts/DeveTPLDataflowVisualizerNuGet/*.snupkg
          ./artifacts/DeveTPLDataflowVisualizer.ConsoleApp/DeveTPLDataflowVisualizer.ConsoleApp.Untrimmed.exe
          ./artifacts/DeveTPLDataflowVisualizer.ConsoleApp/DeveTPLDataflowVisualizer.ConsoleApp.Trimmed.exe
          ./artifacts/DeveTPLDataflowVisualizer.ConsoleApp/DeveTPLDataflowVisualizer.ConsoleApp.TrimmedAot.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  release_nuget:
    needs: [generate_version_number, intellicode, build_windows, build_linux, build_docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        name: DeveTPLDataflowVisualizerNuGet
        path: ./artifacts/DeveTPLDataflowVisualizerNuGet/
    - name: Push NuGet
      run: dotnet nuget push ./artifacts/DeveTPLDataflowVisualizerNuGet/DeveTPLDataflowVisualizer.1.0.${{needs.generate_version_number.outputs.build_number}}.nupkg -k ${{ secrets.NUGETTOKEN }} -s https://api.nuget.org/v3/index.json